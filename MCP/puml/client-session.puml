@startuml
' skinparam monochrome true
' skinparam shadowing false
' skinparam class {
'     BackgroundColor #F5F5F5
'     BorderColor #333
'     FontColor #333
'     ArrowColor #333
' }

class ClientSession {
    .. Protocol information exchanged between client/server ..
    + {static} SUPPORTED_PROTOCOL_VERSIONS: set[str]

    .. Session Lifecycle ..
    + {async} initialize(): InitializeResult
    + {async} send_ping(): EmptyResult

    .. Resource Management ..
    + {async} list_resources(cursor: str = None): ListResourcesResult
    + {async} list_resource_templates(cursor: str = None): ListResourceTemplatesResult
    + {async} read_resource(uri: AnyUrl): ReadResourceResult
    + {async} subscribe_resource(uri: AnyUrl): EmptyResult
    + {async} unsubscribe_resource(uri: AnyUrl): EmptyResult

    .. Tool Operations ..
    + {async} list_tools(cursor: str = None): ListToolsResult
    + {async} call_tool(name, arguments, read_timeout, progress_callback): CallToolResult

    .. Prompt Management ..
    + {async} list_prompts(cursor: str = None): ListPromptsResult
    + {async} get_prompt(name, arguments): GetPromptResult
    + {async} complete(ref, argument): CompleteResult

    .. Notifications & Logging ..
    + {async} send_progress_notification(progress_token, progress, total, message)
    + {async} send_roots_list_changed()
    + {async} set_logging_level(level: LoggingLevel): EmptyResult

    ' .. Internal Handlers ..
    ' - {async} _received_request(responder)
}


@enduml